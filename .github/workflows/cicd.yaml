name: Go CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Check Go Formatting (gofmt)
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "The following files are not formatted:"
            gofmt -l .
            exit 1
          fi

      - name: Static Analysis (Staticcheck)
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      - name: Run Unit Tests
        run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    needs: lint-test-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Build Go application
        run: go build -o go-web-app

  docker-push:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.run_id }}

  update-helm-chart:
    runs-on: ubuntu-latest
    needs: docker-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install cdk8s CLI
        run: npm install -g cdk8s-cli

      - name: Synthesize Kubernetes YAML using cdk8s
        run: |
          cd go-web-app/cdk8s-go-web
          go mod tidy
          cdk8s synth --output ../../cdk8s-dist

      - name: Overwrite Helm chart templates with synthesized YAML
        run: |
          cp -f cdk8s-dist/*.yaml go-web-app/helm/go-web-app-chart/templates/

      - name: Update Helm values.yaml
        run: |
          sed -i 's|tag: .*|tag: "${{ github.run_id }}"|' go-web-app/helm/go-web-app-chart/values.yaml
          sed -i 's|repository: .*|repository: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app|' go-web-app/helm/go-web-app-chart/values.yaml

      - name: Commit and push updated Helm chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "lingammani2@gmail.com"
          git config --global user.name "rushimanikantalingam"
          git add go-web-app/helm/go-web-app-chart/templates/
          git add go-web-app/helm/go-web-app-chart/values.yaml
          git commit -m "Update Helm Chart templates and values with latest build" || echo "No changes to commit"
          git pull origin main --rebase
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:main

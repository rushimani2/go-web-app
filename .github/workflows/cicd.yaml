name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-analysis:
    runs-on: ubuntu-latest

    services:
      sonar:
        image: sonarqube:latest
        options: >-
          --health-cmd="curl --silent --fail http://localhost:9000/api/system/health" 
          --health-timeout=180s --health-retries=5
        ports:
          - 9000:9000

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install SonarScanner
        run: |
          wget -qO- https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.7.0.2747/sonar-scanner-cli-4.7.0.2747-linux.zip | unzip -d /tmp
          export PATH=$PATH:/tmp/sonar-scanner-4.7.0.2747-linux/bin

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=go-web-app \
            -Dsonar.sources=./ \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-deploy:
    runs-on: ubuntu-latest
    needs: sonar-analysis

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t go-web-app .

      # Run Docker Container
      - name: Run Docker Container
        run: |
          docker run -d -p 8080:8080 go-web-app

      # Get the public IP of the running container
      - name: Get Public IP of the application
        run: |
          PUBLIC_IP=$(curl ifconfig.me)
          echo "Public IP is: $PUBLIC_IP"

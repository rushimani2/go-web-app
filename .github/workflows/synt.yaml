name: CDK8s Synth to Helm (TypeScript, No Local Setup)

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  synth-and-copy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up CDK8s environment, compile, and synth
        run: |
          cd cdk8s-go-web
          # Initialize Node.js project
          npm init -y
          # Install CDK8s dependencies
          npm install cdk8s constructs typescript cdk8s-plus-25
          # Install CDK8s CLI globally
          npm install -g cdk8s-cli
          # Create TypeScript config (recursive include)
          cat <<EOF > tsconfig.json
          {
            "compilerOptions": {
              "target": "ES2020",
              "module": "CommonJS",
              "outDir": "dist",
              "strict": true
            },
            "include": ["**/*.ts"]
          }
          EOF
          # Create main.ts file with resources (e.g., a Deployment)
          cat <<EOF > main.ts
          import { App, Chart } from 'cdk8s';
          import { Construct } from 'constructs';
          import * as k8s from 'cdk8s-plus-25';
          class MyChart extends Chart {
            constructor(scope: Construct, id: string) {
              super(scope, id);
              new k8s.Deployment(this, 'web-deployment', {
                metadata: { name: 'web' },
                containers: [{ image: 'nginx' }]
              });
            }
          }
          const app = new App();
          new MyChart(app, 'my-chart');
          app.synth();
          EOF
          # Compile TypeScript to JavaScript
          npx tsc
          # Create cdk8s.yaml to point to the compiled file
          cat <<EOF > cdk8s.yaml
          app: node dist/main.js
          language: typescript
          EOF
          # Synthesize Kubernetes manifests
          cdk8s synth --output temp-synth-output
          # Ensure the output directory exists before attempting to list files
          mkdir -p cdk8s-go-web/temp-synth-output
          # Debug: List files in the temp-synth-output directory
          ls -al cdk8s-go-web/temp-synth-output

      - name: Copy synthesized YAML to Helm chart templates
        run: |
          mkdir -p helm/go-web-app-chart/templates/generated
          cp cdk8s-go-web/temp-synth-output/*.k8s.yaml helm/go-web-app-chart/templates/generated/

      - name: List files in Helm chart templates directory
        run: |
          echo "Listing files in helm/go-web-app-chart/templates/generated/"
          ls -al helm/go-web-app-chart/templates/generated/

      - name: Commit synthesized files to the repository
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          # Add the necessary files
          git add cdk8s-go-web/main.ts
          git add cdk8s-go-web/cdk8s.yaml
          git add cdk8s-go-web/temp-synth-output/*.k8s.yaml
          git add cdk8s-go-web/tsconfig.json
          
          # Ignore unnecessary files
          echo "cdk8s-go-web/node_modules/" >> .gitignore
          echo "cdk8s-go-web/dist/" >> .gitignore
          
          # Commit the changes
          git commit -m "Add synthesized Kubernetes YAML files and update main.ts"
          
          # Push the changes to the repository
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

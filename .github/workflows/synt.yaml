name: CDK8s Go Synth to Helm

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  synth-and-copy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'  # Make sure this is the Go version you need

      - name: Install dependencies and synthesize Kubernetes YAML
        run: |
          cd cdk8s-go-web

          # Initialize Go module and install dependencies
          go mod init my-cdk8s-app
          go get github.com/cdk8s-team/cdk8s-go/cdk8s
          go get github.com/cdk8s-team/cdk8s-go/cdk8s-plus-25
          go get github.com/constructs/constructs-go/constructs

          # Create main.go if it doesn't exist
          cat <<EOF > main.go
          package main

          import (
              "github.com/cdk8s-team/cdk8s-go/cdk8s"
              "github.com/cdk8s-team/cdk8s-go/cdk8s-plus-25/k8s"
              "github.com/constructs/constructs-go/constructs"
          )

          type MyChart struct {
              cdk8s.Chart
          }

          func NewMyChart(scope constructs.Construct, id string) MyChart {
              chart := cdk8s.NewChart(scope, &id)

              // Create Deployment
              k8s.NewDeployment(chart, "web-deployment", &k8s.DeploymentProps{
                  Metadata: &cdk8s.ApiObjectMetadata{
                      Name: "web",
                  },
                  Spec: &k8s.DeploymentSpec{
                      Replicas: cdk8s.Number(1),
                      Selector: &k8s.LabelSelector{
                          MatchLabels: map[string]string{
                              "app": "web",
                          },
                      },
                      Template: &k8s.PodTemplateSpec{
                          Metadata: &cdk8s.ApiObjectMetadata{
                              Labels: map[string]string{
                                  "app": "web",
                              },
                          },
                          Spec: &k8s.PodSpec{
                              Containers: []k8s.Container{
                                  {
                                      Name:  "nginx-container",
                                      Image: "nginx",
                                  },
                              },
                          },
                      },
                  },
              })

              return MyChart{chart}
          }

          func main() {
              app := cdk8s.NewApp(nil)

              NewMyChart(app, "my-chart")

              app.Synth()
          }
          EOF

          # Compile the Go file and synthesize the Kubernetes YAML
          go run main.go

          # Rename the generated file to deployment.yaml
          mv ./dist/my-chart.k8s.yaml ./temp-synth-output/deployment.yaml

          # List the synthesized files for verification
          ls -al ./temp-synth-output

      - name: Commit all files inside cdk8s-go-web directory
        run: |
          # Set up git configuration
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Add the modified files to git (main.go, cdk8s.yaml, synthesized YAML, etc.)
          git add cdk8s-go-web/main.go
          git add cdk8s-go-web/cdk8s.yaml
          git add cdk8s-go-web/temp-synth-output/deployment.yaml
          git add cdk8s-go-web/tsconfig.json

          # Commit the changes and push to the repo
          git commit -m "Add synthesized Kubernetes Deployment YAML"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

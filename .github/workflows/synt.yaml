name: CDK8s Synth to Helm (TypeScript, No Local Setup)

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  synth-and-copy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up CDK8s environment, compile, and synth
        run: |
          cd go-web-app/cdk8s-go-web

          # Initialize Node.js project
          npm init -y

          # Install CDK8s dependencies
          npm install cdk8s constructs typescript

          # Install CDK8s CLI
          npm install -g cdk8s-cli

          # Create TypeScript config
          cat <<EOF > tsconfig.json
          {
            "compilerOptions": {
              "target": "ES2020",
              "module": "CommonJS",
              "outDir": "dist",
              "strict": true
            },
            "include": ["*.ts"]
          }
          EOF

          # Compile TypeScript to JavaScript
          npx tsc

          # Create cdk8s.yaml
          cat <<EOF > cdk8s.yaml
          app: node dist/main.js
          language: typescript
          EOF

          # Synthesize Kubernetes manifests
          cdk8s synth --output temp-synth-output

      - name: Copy synthesized YAML to Helm chart templates
        run: |
          mkdir -p helm/go-web-app-chart/templates/generated
          cp go-web-app/cdk8s-go-web/temp-synth-output/*.k8s.yaml helm/go-web-app-chart/templates/generated/

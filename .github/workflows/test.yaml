name: CI/CD with Different Test Types

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Run Unit Tests
        run: go test -v ./...

      # Example for Integration Tests (assuming you have tests in ./integration_test)
      - name: Run Integration Tests
        run: go test -v ./integration_test/...

      # Example for End-to-End Tests (assuming you have tests in ./e2e)
      - name: Run End-to-End Tests
        run: go test -v ./e2e/...
        # You might need to set up an environment for E2E tests here

      # You would add similar steps for other test types
      # For example, for Smoke Tests:
      # - name: Run Smoke Tests
      #   run: go test -v ./smoke_test/...

      # Performance, Reliability, Security, Contract, and Canary tests often involve
      # separate tools and might have more complex setup steps.
      # You would add steps to execute those tools here.
      # Example for a simple performance test using a Go library:
      # - name: Run Performance Tests
      #   run: go test -v -tags=performance ./...
      #   # Assuming you use build tags to separate performance tests

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      - name: Build Go application
        run: go build -o go-web-app

  # ... (rest of your build, push, and update-helm-chart jobs remain the same) ...
